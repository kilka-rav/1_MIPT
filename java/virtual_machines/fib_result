Classfile /home/ravil/virtual_machines/Fib.class
  Last modified 16 нояб. 2022 г.; size 522 bytes
  MD5 checksum 3412c9b42d8818ccf9120e62c4849217
  Compiled from "Fib.java"
public class Fib
  minor version: 0
  major version: 55
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #5                          // Fib
  super_class: #6                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 3, attributes: 1
Constant pool:
   #1 = Methodref          #6.#18         // java/lang/Object."<init>":()V
   #2 = Methodref          #5.#19         // Fib.fibonachi:(I)I
   #3 = Fieldref           #20.#21        // java/lang/System.out:Ljava/io/PrintStream;
   #4 = Methodref          #22.#23        // java/io/PrintStream.println:(I)V
   #5 = Class              #24            // Fib
   #6 = Class              #25            // java/lang/Object
   #7 = Utf8               <init>
   #8 = Utf8               ()V
   #9 = Utf8               Code
  #10 = Utf8               LineNumberTable
  #11 = Utf8               fibonachi
  #12 = Utf8               (I)I
  #13 = Utf8               StackMapTable
  #14 = Utf8               main
  #15 = Utf8               ([Ljava/lang/String;)V
  #16 = Utf8               SourceFile
  #17 = Utf8               Fib.java
  #18 = NameAndType        #7:#8          // "<init>":()V
  #19 = NameAndType        #11:#12        // fibonachi:(I)I
  #20 = Class              #26            // java/lang/System
  #21 = NameAndType        #27:#28        // out:Ljava/io/PrintStream;
  #22 = Class              #29            // java/io/PrintStream
  #23 = NameAndType        #30:#31        // println:(I)V
  #24 = Utf8               Fib
  #25 = Utf8               java/lang/Object
  #26 = Utf8               java/lang/System
  #27 = Utf8               out
  #28 = Utf8               Ljava/io/PrintStream;
  #29 = Utf8               java/io/PrintStream
  #30 = Utf8               println
  #31 = Utf8               (I)V
{
  public Fib();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 1: 0

  static int fibonachi(int);
    descriptor: (I)I
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: iload_0
         1: ifne          6
         4: iconst_0
         5: ireturn
         6: iload_0
         7: iconst_1
         8: if_icmpne     13
        11: iconst_1
        12: ireturn
        13: iload_0
        14: iconst_1
        15: isub
        16: invokestatic  #2                  // Method fibonachi:(I)I
        19: iload_0
        20: iconst_2
        21: isub
        22: invokestatic  #2                  // Method fibonachi:(I)I
        25: iadd
        26: ireturn
      LineNumberTable:
        line 3: 0
        line 4: 4
        line 6: 6
        line 7: 11
        line 10: 13
      StackMapTable: number_of_entries = 2
        frame_type = 6 /* same */
        frame_type = 6 /* same */

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        10
         2: invokestatic  #2                  // Method fibonachi:(I)I
         5: istore_1
         6: getstatic     #3                  // Field java/lang/System.out:Ljava/io/PrintStream;
         9: iload_1
        10: invokevirtual #4                  // Method java/io/PrintStream.println:(I)V
        13: return
      LineNumberTable:
        line 14: 0
        line 15: 6
        line 16: 13
}
SourceFile: "Fib.java"
